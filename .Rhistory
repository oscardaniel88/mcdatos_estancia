.(antelacion),summarise, nights = sum(nights))
eleccion <- eleccion[with(eleccion,order(-antelacion)), ]
eleccion$nights <- cumsum(eleccion$nights)
eleccion <- eleccion[eleccion$antelacion<=60,]
mod <- glm(nights~antelacion, family = "poisson", data = eleccion)
coeficientes <- coef(mod)
beta0[i] <- coeficientes[1]
beta1[i]<- coeficientes[2]
variacion[i] <- sqrt(mod$deviance)
}
yresp <- data.frame(hotel=rep(h,ndia),dia,beta0,beta1,variacion)
return(yresp)
}
yresp.1 <- modelo.1(res,"CEINS")
yresp<-yresp.1
series2018 <- subset(yresp,format(yresp$dia, "%Y")=="2017")
series2018$dia <- series2018$dia+365
names(series2018) <- c("hotel","dia","AAbeta0","AAbeta1","variacion")
View(series2018)
series2018$dia <- series2018$dia+365
series2018 <- subset(yresp,format(yresp$dia, "%Y")=="2017")
series2018$dia <- as.date(series2018$dia)+365
names(series2018) <- c("hotel","dia","AAbeta0","AAbeta1","variacion")
series2018$dia <- as.date(series2018$dia)+365
series2018$dia <- as.Date(series2018$dia)+365
names(series2018) <- c("hotel","dia","AAbeta0","AAbeta1","variacion")
tl_habocup <- historico_ocupacion %>% group_by(date_in) %>% summarise(nights=sum(nights))
ggplot(tl_habocup, aes(date_in, nights)) + geom_line() +
xlab("") + ylab("Cuartos Ocupados")+ggtitle("Habitaciones Ocupadas")
library(tidyverse)
library(Hmisc)
library(knitr)
library(ggplot2)
library(kableExtra)
library(plyr)
RES_CEXXX<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
RES_CEXXX<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
RES_CEXXX$date_create<-as.Date(RES_CEXXX$date_create)+365
RES_CEXXX$date_in<-as.Date(RES_CEXXX$date_in)+365
RES_CEXXX$date_out<-as.Date(RES_CEXXX$date_out)+365
View(RES_CEXXX)
res<-RES_CEXXX
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018a11ago$date_in, "%Y")=="2018")
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")
View(res2018al11ago)
res <- ddply(datos,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
res <- ddply(datos,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")
View(res)
RES_CEXXX$date_create<-as.Date(RES_CEXXX$date_create)+365
RES_CEXXX$date_in<-as.Date(RES_CEXXX$date_in)+365
RES_CEXXX$date_out<-as.Date(RES_CEXXX$date_out)+365
res<-RES_CEXXX
res <- ddply(datos,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")
res<-RES_CEXXX
res <- ddply(res,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")
RES_CEXXX$date_create<-as.Date(RES_CEXXX$date_create)+365
RES_CEXXX$date_in<-as.Date(RES_CEXXX$date_in)+365
RES_CEXXX$date_out<-as.Date(RES_CEXXX$date_out)+365
res<-RES_CEXXX
res <- ddply(res,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")
RES_CEXXX<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
res<-RES_CEXXX
res <- ddply(res,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")
RES_CEXXX$date_create<-as.Date(RES_CEXXX$date_create)+365
RES_CEXXX$date_in<-as.Date(RES_CEXXX$date_in)+365
RES_CEXXX$date_out<-as.Date(RES_CEXXX$date_out)+365
res<-RES_CEXXX
res <- ddply(res,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")
param.1 <- modelo.1(res2018al11ago,"CEINS")
param2018 <- param.1
series2018al11ago <- join(series2018al11ago,param2018)
View(series2018al11ago)
param.1
join?
ex
?join
View(param2018)
names(series2018) <- c("hotel","dia","AAbeta0","AAbeta1","AAvariacion")
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
series2018al11ago <- inner_join(series2018al11ago,param2018)
series2018al11ago$diasem <- as.factor(weekdays(series2018al11ago$dia))
View(series2018al11ago)
series2018al11ago$mes <- as.factor(format(series2018al11ago$dia, "%b"))
View(tl_ocup)
View(historico_mkt_eprom)
View(indicadores)
PO_PT <- indicadores %>% select(hotel,dia,PO,PT)
PO_PT <- indicadores %>% select(hotel,dia,po,pt)
PO_PT <- indicadores %>% select(Hotel,fecha,po,pt)
names(PO_PT) <- c("hotel","dia","PO","PT")
View(PO_PT)
series2018al11ago <- join(series2018al11ago,PO_PT)
PO_PT$fecha<-as.Date(PO_PT$Fecha)+365
PO_PT$fecha<-as.Date(PO_PT$fecha)+365
PO_PT <- indicadores %>% select(Hotel,fecha,po,pt)
PO_PT$fecha<-as.Date(PO_PT$fecha)+365
names(PO_PT) <- c("hotel","dia","PO","PT")
series2018al11ago <- join(series2018al11ago,PO_PT)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
series2018al11ago <- join(series2018al11ago,param2018)
series2018al11ago$diasem <- as.factor(weekdays(series2018al11ago$dia))
series2018al11ago$mes <- as.factor(format(series2018al11ago$dia, "%b"))
series2018al11ago$eventos <- rep(0,nrow(series2018al11ago))
series2018al11ago$eventos <- as.factor(ifelse(as.numeric(series2018al11ago$dia)<=as.numeric(as.Date("2018-08-11")) &
as.numeric(series2018al11ago$dia)>=as.numeric(as.Date("2018-03-27")),1,0))
PO_PT <- indicadores %>% select(Hotel,fecha,po,pt)
PO_PT$fecha<-as.Date(PO_PT$fecha)+365
names(PO_PT) <- c("hotel","dia","PO","PT")
series2018al11ago <- join(series2018al11ago,PO_PT)
datos2018al1agoCEINS <- subset(series2018al11ago,hotel=="CEINS")
library(plyr)
HIS_CEXXX<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
#HIS_CEXXX$antelacion <-as.integer(difftime(HIS_CEXXX$date_in,HIS_CEXXX$date_create, units="days"))
#Juntamos todas las tablas en un solo dataset
#datos <- rbind(HIS_CEINS, HIS_CEMID, HIS_CEMTA, HIS_CEMZT, HIS_CEPAZ, HIS_CEPDC, RES_CEINS, RES_CEMID, RES_CEMTA, RES_CEMZT, RES_CEPAZ, RES_CEPDC)
datos <-(HIS_CEXXX)
#Modelo de regresi칩n Poisson para obtener par치metros de modelo predictivo
modelo.1<-function(base,h){
hotel<-subset(base,prop_code==h)
dia<-sort(unique(hotel$date_in))
ndia<-length(dia)
beta0<-rep(0,ndia)
beta1<-rep(0,ndia)
variacion<-rep(0,ndia)
for(i in 1:ndia){
eleccion <- ddply(subset(hotel,as.character(date_in)==as.character(dia[i]),select = c('antelacion','nights')),
.(antelacion),summarise, nights = sum(nights))
eleccion <- eleccion[with(eleccion,order(-antelacion)), ]
eleccion$nights <- cumsum(eleccion$nights)
eleccion <- eleccion[eleccion$antelacion<=60,]
mod <- glm(nights~antelacion, family = "poisson", data = eleccion)
coeficientes <- coef(mod)
beta0[i] <- coeficientes[1]
beta1[i]<- coeficientes[2]
variacion[i] <- sqrt(mod$deviance)
}
yresp <- data.frame(hotel=rep(h,ndia),dia,beta0,beta1,variacion)
return(yresp)
}
# Prepara datos 2017 de entrada del modelo
res <- ddply(datos,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
res <- subset(res,format(res$date_in, "%Y")=="2017")
yresp.1 <- modelo.1(res,"CEINS")
#yresp <- rbind(yresp.1, yresp.2, yresp.3, yresp.4, yresp.5, yresp.6)
yresp<-yresp.1
### Preparaci칩n de datos para modelo predictivo (2018)
series2018 <- subset(yresp,format(yresp$dia, "%Y")=="2017")
series2018$dia <- as.Date(series2018$dia)+365
names(series2018) <- c("hotel","dia","AAbeta0","AAbeta1","AAvariacion")
### Series a la fecha de corte en la extracci칩n
#Reservas
RES_CEXXX<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
#
###BORRAR
RES_CEXXX$date_create<-as.Date(RES_CEXXX$date_create)+365
RES_CEXXX$date_in<-as.Date(RES_CEXXX$date_in)+365
RES_CEXXX$date_out<-as.Date(RES_CEXXX$date_out)+365
####
res<-RES_CEXXX
res <- ddply(res,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")
### Aplicaci칩n del modelo a la fecha de corte por extracci칩n
param.1 <- modelo.1(res2018al11ago,"CEINS")
#param2018 <- rbind(param.1, param.2, param.3, param.4, param.5, param.6)
param2018 <- param.1
series2018al11ago <- join(series2018al11ago,param2018)
### Generaci칩n de predictores de modelo predictivo
series2018al11ago$diasem <- as.factor(weekdays(series2018al11ago$dia))
series2018al11ago$mes <- as.factor(format(series2018al11ago$dia, "%b"))
TDC <- read.csv("TDC.csv")
names(TDC) <- c("dia","tdc")
series2018al11ago <- join(series2018al11ago,TDC)
series2018al11ago$eventos <- rep(0,nrow(series2018al11ago))
series2018al11ago$eventos <- as.factor(ifelse(as.numeric(series2018al11ago$dia)<=as.numeric(as.Date("2018-08-11")) &
as.numeric(series2018al11ago$dia)>=as.numeric(as.Date("2018-03-27")),1,0))
PO_PT <- indicadores %>% select(Hotel,fecha,po,pt)
##Borrar
PO_PT$fecha<-as.Date(PO_PT$fecha)+365
##
names(PO_PT) <- c("hotel","dia","PO","PT")
series2018al11ago <- join(series2018al11ago,PO_PT)
### Generaci칩n de modelos predictivos por hotel
#CEINS
datos2018al1agoCEINS <- subset(series2018al11ago,hotel=="CEINS")
mod.CEINS.beta0 <- lm(beta0~AAbeta0+diasem+eventos+PO+PT,data=datos2018al1agoCEINS)
datos2015al22abrCEINS$pred.beta0 <-predict(mod.CEINS.beta0,type='response')
mod.CEINS.beta1 <- lm(beta1~AAbeta1+diasem+tdc+eventos+PO+PT,data=datos2015al22abrCEINS)
datos2015al22abrCEINS$pred.beta1 <-predict(mod.CEINS.beta1,type='response')
datos2018al1agoCEINS <- subset(series2018al11ago,hotel=="CEINS")
mod.CEINS.beta0 <- lm(beta0~AAbeta0+diasem+eventos+PO+PT,data=datos2018al1agoCEINS)
datos2018al1agoCEINS$pred.beta0 <-predict(mod.CEINS.beta0,type='response')
mod.CEINS.beta1 <- lm(beta1~AAbeta1+diasem+eventos+PO+PT,data=datos2018al1agoCEINS)
datos2018al1agoCEINS$pred.beta1 <-predict(mod.CEINS.beta1,type='response')
datos2018al11agoCEINS <- subset(series2018al11ago,hotel=="CEINS")
mod.CEINS.beta0 <- lm(beta0~AAbeta0+diasem+eventos+PO+PT,data=datos2018al11agoCEINS)
datos2018al11agoCEINS$pred.beta0 <-predict(mod.CEINS.beta0,type='response')
mod.CEINS.beta1 <- lm(beta1~AAbeta1+diasem+eventos+PO+PT,data=datos2018al11agoCEINS)
datos2018al11agoCEINS$pred.beta1 <-predict(mod.CEINS.beta1,type='response')
library(plyr)
HIS_CEXXX<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
datos <-(HIS_CEXXX)
modelo.1<-function(base,h){
hotel<-subset(base,prop_code==h)
dia<-sort(unique(hotel$date_in))
ndia<-length(dia)
beta0<-rep(0,ndia)
beta1<-rep(0,ndia)
variacion<-rep(0,ndia)
for(i in 1:ndia){
eleccion <- ddply(subset(hotel,as.character(date_in)==as.character(dia[i]),select = c('antelacion','nights')),
.(antelacion),summarise, nights = sum(nights))
eleccion <- eleccion[with(eleccion,order(-antelacion)), ]
eleccion$nights <- cumsum(eleccion$nights)
eleccion <- eleccion[eleccion$antelacion<=60,]
mod <- glm(nights~antelacion, family = "poisson", data = eleccion)
coeficientes <- coef(mod)
beta0[i] <- coeficientes[1]
beta1[i]<- coeficientes[2]
variacion[i] <- sqrt(mod$deviance)
}
yresp <- data.frame(hotel=rep(h,ndia),dia,beta0,beta1,variacion)
return(yresp)
}
res <- ddply(datos,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
res <- subset(res,format(res$date_in, "%Y")=="2017")
yresp.1 <- modelo.1(res,"CEINS")
yresp<-yresp.1
series2018 <- subset(yresp,format(yresp$dia, "%Y")=="2017")
series2018$dia <- as.Date(series2018$dia)+365
names(series2018) <- c("hotel","dia","AAbeta0","AAbeta1","AAvariacion")
RES_CEXXX<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
RES_CEXXX$date_create<-as.Date(RES_CEXXX$date_create)+365
RES_CEXXX$date_in<-as.Date(RES_CEXXX$date_in)+365
RES_CEXXX$date_out<-as.Date(RES_CEXXX$date_out)+365
res<-RES_CEXXX
res <- ddply(res,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")
param.1 <- modelo.1(res2018al11ago,"CEINS")
param2018 <- param.1
series2018al11ago <- join(series2018al11ago,param2018)
series2018al11ago$diasem <- as.factor(weekdays(series2018al11ago$dia))
series2018al11ago$mes <- as.factor(format(series2018al11ago$dia, "%b"))
series2018al11ago <- join(series2018al11ago,TDC)
series2018al11ago$eventos <- rep(0,nrow(series2018al11ago))
series2018al11ago$eventos <- as.factor(ifelse(as.numeric(series2018al11ago$dia)<=as.numeric(as.Date("2018-08-11")) &
as.numeric(series2018al11ago$dia)>=as.numeric(as.Date("2018-03-27")),1,0))
PO_PT <- indicadores %>% select(Hotel,fecha,po,pt)
PO_PT$fecha<-as.Date(PO_PT$fecha)+365
names(PO_PT) <- c("hotel","dia","PO","PT")
series2018al11ago <- join(series2018al11ago,PO_PT)
datos2018al11agoCEINS <- subset(series2018al11ago,hotel=="CEINS")
mod.CEINS.beta0 <- lm(beta0~AAbeta0+diasem+eventos+PO+PT,data=datos2018al11agoCEINS)
datos2018al11agoCEINS$pred.beta0 <-predict(mod.CEINS.beta0,type='response')
mod.CEINS.beta1 <- lm(beta1~AAbeta1+diasem+eventos+PO+PT,data=datos2018al11agoCEINS)
datos2018al11agoCEINS$pred.beta1 <-predict(mod.CEINS.beta1,type='response')
mod.CEINS.beta1
mod.CEINS.beta0
predict(mod.CEINS.beta1,type='response')
resp<-predict(mod.CEINS.beta1,type='response')
resp
result<-predict(mod.CEINS.beta1,type='response')
datos2018al11agoCEINS$pred.beta1<-result[1:220]
datos2018al11agoCEINS$pred.beta1<-result[1:220,]
result[1:220]
str(result)
str(datos2018al11agoCEINS)
datos2018al11agoCEINS <- subset(series2018al11ago,hotel=="CEINS")
str(datos2018al11agoCEINS)
mod.CEINS.beta0 <- lm(beta0~AAbeta0+diasem+eventos+PO+PT,data=datos2018al11agoCEINS)
str(predict(mod.CEINS.beta0,type='response'))
datos2018al11agoCEINS$pred.beta0 <-predict(mod.CEINS.beta0,type='response')
mod.CEINS.beta1 <- lm(beta1~AAbeta1+diasem+eventos+PO+PT,data=datos2018al11agoCEINS)
result<-predict(mod.CEINS.beta1,type='response')
str(result)
View(datos2018al11agoCEINS)
datos2018al11agoCEINS[which(datos2018al11agoCEINS$AAbeta1=NA)]
datos2018al11agoCEINS[which(datos2018al11agoCEINS$AAbeta1==NA)]
is.na(datos2018al11agoCEINS$AAbeta1)
datos2018al11agoCEINS[is.na(datos2018al11agoCEINS$AAbeta1)]
datos2018al11agoCEINS[is.na(datos2018al11agoCEINS$AAbeta1),]
datos2018al11agoCEINS$AAbeta1[is.na(datos2018al11agoCEINS$AAbeta1),]
datos2018al11agoCEINS$AAbeta1[is.na(datos2018al11agoCEINS$AAbeta1)]
datos2018al11agoCEINS$AAbeta1[is.na(datos2018al11agoCEINS$AAbeta1)]<-0
mod.CEINS.beta1 <- lm(beta1~AAbeta1+diasem+eventos+PO+PT,data=datos2018al11agoCEINS)
result<-predict(mod.CEINS.beta1,type='response')
datos2018al11agoCEINS$pred.beta1<-result[1:220,]
datos2018al11agoCEINS$pred.beta1<-predict(mod.CEINS.beta1,type='response')
series2018 <- join(series2018,PO_PT)
View(series2018)
series2018$AAbeta1[is.na(datos2018al11agoCEINS$AAbeta1)]<-0
series2018 <- join(series2018,PO_PT)
series2018$AAbeta1[is.na(series2018$AAbeta1)]<-0
series2018 <- join(series2018,PO_PT)
series2018$AAbeta1[is.na(series2018$AAbeta1)]<-0
series2018$eventos1 <- ifelse(as.numeric(series2018$dia)<=as.numeric(as.Date("2018-04-04")) &
as.numeric(series2018$dia)>=as.numeric(as.Date("2018-03-27")),1,0)
series2018$eventos <- series2018$eventos1
series2018$eventos <- as.factor(series2018$eventos)
series2018$pred.beta0 <- ifelse(series2015$hotel=="CEINS",predict(mod.CEINS.beta0,newdata=series2015,type="response"),0)
series2018$pred.beta0 <- ifelse(series2018$hotel=="CEINS",predict(mod.CEINS.beta0,newdata=series2018,type="response"),0)
series2018$pred.beta1 <- ifelse(series2018$hotel=="CEINS",predict(mod.CEINS.beta1,newdata=series2018,type="response"),0)
series2018$eventos <- series2018$eventos1
series2018$eventos <- as.factor(series2018$eventos)
series2018$pred.beta0 <- ifelse(series2018$hotel=="CEINS",predict(mod.CEINS.beta0,newdata=series2018,type="response"),0)
series2018$diasem <- as.factor(weekdays(series2018$dia))
series2018$mes <- as.factor(format(series2018$dia, "%b"))
series2018$pred.beta0 <- ifelse(series2018$hotel=="CEINS",predict(mod.CEINS.beta0,newdata=series2018,type="response"),0)
series2018$pred.beta1 <- ifelse(series2018$hotel=="CEINS",predict(mod.CEINS.beta1,newdata=series2018,type="response"),0)
print(series2018)
head(series2018,10)
installpackages("corrplot")
install.packages("corrplot")
install.packages("cowplot")
pickup_rsrv <- historico_grp_rsrv %>% group_by(antelacion) %>% summarise(reservas=cumsum(count))
# Chunk 1: knitr_options
opts_chunk$set(fig.width=14, fig.height=5, fig.path='figures/',
warning=FALSE, message=FALSE, tidy=FALSE)
options(width=60)
set.seed(53079239)
# Chunk 2: libraries
library(tidyverse)
library(Hmisc)
library(knitr)
library(ggplot2)
library(kableExtra)
library(corrplot)
knitr::opts_chunk$set(echo = TRUE)
# Chunk 3: working_directlory
system <- Sys.info()
if(system["sysname"]=="Windows"){
setwd("~/GitHub/mcdatos_estancia")
} else{
setwd("~/Documents/CienciaDatos/GitHub/mcdatos_estancia")
}
historico_ocupacion<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
canales <- read_csv("datos/cat_canales.csv") %>% select(Id_Origen, Descripcion)
segmentos <- read_csv("datos/cat_segmentos.csv") %>% select(ID_SUBSEGM,Descripcion)
indicadores<-read_csv("datos/Indicadores_CEINS.csv")
competencia<-read_csv("datos/BOP_CEINS.csv") %>% select(nombre,fecha,precio)
TDC <- read.csv("datos/tdc.csv")
names(TDC) <- c("dia","tdc")
TDC$dia <- as.Date(TDC$dia)
reservasCEINS <- read_csv("datos/CEINS_RESERVAS.csv")
eventos <- read_csv("datos/eventos.csv") %>% select(hotel_clave,fecha,eventos)
names(eventos)<-c("hotel","dia","eventos")
eventos2018 <- eventos %>% filter(format(dia,"%Y")=="2017") %>% mutate(dia = dia +365)
eventos <- rbind(eventos,eventos2018)
# Chunk 4: summary
summary(historico_ocupacion)
# Chunk 5: registros
reservas<-historico_ocupacion %>% filter(rsrv_code == 6265739) %>% select(rsrv_code,date_create,date_in,date_out,nights,room_type)
kable(reservas, "latex") %>%
kable_styling(latex_options = "striped")
# Chunk 6: HabitacionesOcupadas
tl_habocup <- historico_ocupacion %>% group_by(date_in) %>% summarise(nights=sum(nights))
ggplot(tl_habocup, aes(date_in, nights)) + geom_line() +
xlab("") + ylab("Cuartos Ocupados")+ggtitle("Habitaciones Ocupadas")
# Chunk 7: Ocupacion
tl_ocup <- historico_ocupacion %>% group_by(date_in) %>% summarise(ocupacion=sum(nights)/159)
ggplot(tl_ocup, aes(date_in, ocupacion)) + geom_line() +
xlab("") + ylab("% Ocupacion")+ggtitle("% Ocupacion") + geom_smooth()
# Chunk 8: Ocupacion Dia Semana
ocup_dia_sem <- historico_ocupacion %>% group_by(date_in) %>% summarise(nights=sum(nights),
dia_sem = min(Dia_Sem),
count_sem = 1) %>%
group_by(dia_sem) %>% summarise(nights=sum(nights),
semanas = sum(count_sem)) %>%
mutate(ocup=nights/(semanas*159))
ggplot(ocup_dia_sem, aes(dia_sem,ocup)) + geom_bar(stat="identity") +
xlab("Dia de la semana") + ylab("% Ocupacion")+ggtitle("% Ocupacion por dia de la semana") +
scale_x_discrete(limits=c("lun","mar","mie","jue","vie","sab","dom"))
historico_grp_rsrv <- historico_ocupacion %>% group_by(rsrv_code) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)
historico_grp_rsrv$antelacion<-as.integer(difftime(historico_grp_rsrv$date_in,historico_grp_rsrv$date_create, units="days"))
pickup_rsrv <- historico_grp_rsrv %>% group_by(antelacion) %>% summarise(reservas=cumsum(count))
pickup_rsrv <- historico_grp_rsrv %>% group_by(antelacion) %>% summarise(reservas=sum(count))
pickup_rsrv$cumsum<-cumsum(reservas)
View(pickup_rsrv)
pickup_rsrv$cumsum<-rev(cumsum(rev(pickup_rsrv$reservas)))
historico_grp_rsrv <- historico_ocupacion %>% group_by(rsrv_code) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)
historico_grp_rsrv$antelacion<-as.integer(difftime(historico_grp_rsrv$date_in,historico_grp_rsrv$date_create, units="days"))
pickup_rsrv <- historico_grp_rsrv %>% group_by(antelacion) %>% summarise(reservas=sum(count))
pickup_rsrv$reservas<-rev(cumsum(rev(pickup_rsrv$reservas)))
ggplot(pickup_rsrv, aes(antelacion, reservas)) + geom_line() + xlim(-1,100) + ggtitle("Pickup 100 dias")
ggplot(pickup_rsrv, aes(antelacion, reservas)) + geom_line() + xlim(-1,25) + ggtitle("Pickup 25 dias")
historico_grp_rsrv_src <- historico_ocupacion %>% group_by(rsrv_code,rsrv_src) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)%>% left_join(canales, by=c("rsrv_src"="Id_Origen"))
historico_grp_rsrv_src$antelacion<-as.integer(difftime(historico_grp_rsrv_src$date_in,historico_grp_rsrv_src$date_create, units="days"))
pickup_src <- historico_grp_rsrv_src %>% group_by(Descripcion,antelacion) %>% summarise(reservas=sum(count))
pickup_src$reservas<-rev(cumsum(rev(pickup_src$reservas)))
ggplot(pickup_src, aes(antelacion, reservas)) + geom_line() + xlim(-1,25) + facet_wrap(~Descripcion) + ggtitle("Pickup por Canal de Reserva")
View(pickup_src)
historico_grp_rsrv_src <- historico_ocupacion %>% group_by(rsrv_code,rsrv_src) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)%>% left_join(canales, by=c("rsrv_src"="Id_Origen"))
historico_grp_rsrv_src$antelacion<-as.integer(difftime(historico_grp_rsrv_src$date_in,historico_grp_rsrv_src$date_create, units="days"))
pickup_src <- historico_grp_rsrv_src %>% group_by(Descripcion,antelacion) %>% summarise(reservas=sum(count),
cumsum = cumsum(rev(reservas)) )
pickup_src <- pickup_src %>% group_by(Descripcion,antelacion) %>% summarise(cumsum = cumsum(rev(reserva)))
pickup_src <- pickup_src %>% group_by(Descripcion,antelacion) %>% summarise(cumsum = cumsum(rev(reservas)))
historico_grp_rsrv_src <- historico_ocupacion %>% group_by(rsrv_code,rsrv_src) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)%>% left_join(canales, by=c("rsrv_src"="Id_Origen"))
historico_grp_rsrv_src$antelacion<-as.integer(difftime(historico_grp_rsrv_src$date_in,historico_grp_rsrv_src$date_create, units="days"))
pickup_src <- historico_grp_rsrv_src %>% group_by(Descripcion,antelacion) %>% summarise(reservas=sum(count),
cumsum = cumsum(rev(reservas)) )
pickup_src <- pickup_src %>% group_by(Descripcion) %>% %>% mutate(cs = cumsum(reservas))
historico_grp_rsrv_src <- historico_ocupacion %>% group_by(rsrv_code,rsrv_src) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)%>% left_join(canales, by=c("rsrv_src"="Id_Origen"))
historico_grp_rsrv_src$antelacion<-as.integer(difftime(historico_grp_rsrv_src$date_in,historico_grp_rsrv_src$date_create, units="days"))
historico_grp_rsrv_src <- historico_ocupacion %>% group_by(rsrv_code,rsrv_src) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)%>% left_join(canales, by=c("rsrv_src"="Id_Origen"))
historico_grp_rsrv_src$antelacion<-as.integer(difftime(historico_grp_rsrv_src$date_in,historico_grp_rsrv_src$date_create, units="days"))
pickup_src <- historico_grp_rsrv_src %>% group_by(Descripcion,antelacion) %>% summarise(reservas=sum(count))
pickup_src <- pickup_src %>% group_by(Descripcion,antelacion) %>% mutate(cs = cumsum(reservas))
pickup_src <- pickup_src %>% group_by(Descripcion) %>% mutate(cs = cumsum(reservas))
historico_grp_rsrv_src <- historico_ocupacion %>% group_by(rsrv_code,rsrv_src) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)%>% left_join(canales, by=c("rsrv_src"="Id_Origen"))
historico_grp_rsrv_src$antelacion<-as.integer(difftime(historico_grp_rsrv_src$date_in,historico_grp_rsrv_src$date_create, units="days"))
pickup_src <- historico_grp_rsrv_src %>% group_by(Descripcion,antelacion) %>% summarise(reservas=sum(count))
pickup_src <- pickup_src %>% group_by(Descripcion) %>% mutate(cs = rev(cumsum(rev(reservas)))
ggplot(pickup_src, aes(antelacion, reservas)) + geom_line() + xlim(-1,25) + facet_wrap(~Descripcion) + ggtitle("Pickup por Canal de Reserva")
pickup_src <- pickup_src %>% group_by(Descripcion) %>% mutate(cs = rev(cumsum(rev(reservas))))
historico_grp_rsrv_src <- historico_ocupacion %>% group_by(rsrv_code,rsrv_src) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)%>% left_join(canales, by=c("rsrv_src"="Id_Origen"))
historico_grp_rsrv_src$antelacion<-as.integer(difftime(historico_grp_rsrv_src$date_in,historico_grp_rsrv_src$date_create, units="days"))
pickup_src <- historico_grp_rsrv_src %>% group_by(Descripcion,antelacion) %>% summarise(reservas=sum(count))
pickup_src <- pickup_src %>% group_by(Descripcion) %>% mutate(reseravas = rev(cumsum(rev(reservas))))
ggplot(pickup_src, aes(antelacion, reservas)) + geom_line() + xlim(-1,25) + facet_wrap(~Descripcion) + ggtitle("Pickup por Canal de Reserva")
historico_grp_rsrv_src <- historico_ocupacion %>% group_by(rsrv_code,rsrv_src) %>% summarise(nights=sum(nights),
date_create = min(date_create),
date_in = min(date_in),
date_out = max(date_out),
count = 1)%>% left_join(canales, by=c("rsrv_src"="Id_Origen"))
historico_grp_rsrv_src$antelacion<-as.integer(difftime(historico_grp_rsrv_src$date_in,historico_grp_rsrv_src$date_create, units="days"))
pickup_src <- historico_grp_rsrv_src %>% group_by(Descripcion,antelacion) %>% summarise(reservas=sum(count))
pickup_src <- pickup_src %>% group_by(Descripcion) %>% mutate(reservas = rev(cumsum(rev(reservas))))
ggplot(pickup_src, aes(antelacion, reservas)) + geom_line() + xlim(-1,25) + facet_wrap(~Descripcion) + ggtitle("Pickup por Canal de Reserva")
