\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage{lmodern}
\usepackage{amsmath}
\usepackage{enumitem}
\usepackage{graphicx}
\usepackage{listings}
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{array}
\usepackage{multirow}
\usepackage[table]{xcolor}
\usepackage{wrapfig}
\usepackage{float}
\usepackage{colortbl}
\usepackage{pdflscape}
\usepackage{tabu}
\usepackage{threeparttable}
\usepackage{threeparttablex}
\usepackage[normalem]{ulem}
\usepackage{makecell}
\begin{document}
<<knitr_options, include=FALSE>>=
opts_chunk$set(fig.width=14, fig.height=5, fig.path='figures/',
               warning=FALSE, message=FALSE, tidy=FALSE)
options(width=60)
set.seed(53079239)
@

<<libraries, include=FALSE>>=
library(tidyverse)
library(Hmisc)
library(knitr)
library(ggplot2)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
@

<<working_directlory, include=FALSE>>=
system <- Sys.info()
if(system["sysname"]=="Windows"){
  setwd("~/GitHub/mcdatos_estancia")
} else{
  setwd("~/Documents/CienciaDatos/GitHub/mcdatos_estancia")
}
historico_ocupacion<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
canales <- read_csv("datos/cat_canales.csv") %>% select(Id_Origen, Descripcion)
segmentos <- read_csv("datos/cat_segmentos.csv") %>% select(ID_SUBSEGM,Descripcion)
indicadores<-read_csv("datos/Indicadores_CEINS.csv")
competencia<-read_csv("datos/BOP_CEINS.csv") %>% select(nombre,fecha,precio)
@
\title{\Huge Modelo de Predicción de Demanda y Pricing Dinámico}
\author{Oscar Daniel Camarena Gómez}
\date{}
\maketitle
\pagenumbering{gobble}
\newpage
\pagenumbering{arabic}
\section{Introducción}
\paragraph {CityExpress} ~ \\
CityExpress es una cadena de hoteles 100\% mexicana enfocada al turismo de negocios. Actualmente cuenta con 140 hoteles en México y Latinoamérica (Colombia, Costa Rica y Chile). CityExpress cuenta con hoteles pensados para el viajero de negocios, sus instalaciones son prácticas, la tarifa es baja y ofrece servicios limitados pero valiosos durante un viaje de negocios, por ejemplo:
\begin{itemize}[noitemsep]
\item Internet gratuito en las habitaciones
\item Desayuno de cortesía
\item Transporte gratuito 10 km a la redonda
\item Servicio estandarizado con bajo costo
\end{itemize}
CityExpress cuenta con 4 marcas, cada una de ellas enfocada a distintos segmentos de mercado:
\begin{description}
\item [$\bullet$ CityExpress:] Marca emblema, enfocada al viajero de negocios. Los hoteles están ubicados cerca de los centros de negocios de las distintas ciudades en la República Mexicana.
\item [$\bullet$ CityExpress Plus:] Hoteles ubicados en las principales ciudades de la República Mexicana (CDMX, Guadalajara, Monterrey) y en Latinoamérica (Colombia). Ofrecen diseños vanguardistas y mayor espacio en las habitaciones.
\item [$\bullet$ CityExpress Suites:] Marca enfocada en los viajeros de larga estancia. Sus instalaciones cuentan con cocineta, estancia y habitaciones de mayor tamaño.
\item [$\bullet$ CityExpress Junior:] Hoteles de menor precio enfocados al turismo con presupuesto limitado ofreciendo un producto de calidad y con servicio estandarizado.
\end{description}
\paragraph {Ubicación} ~ \\
Típicamente un hotel de CityExpress está ubicado cerca de zonas industriales o zonas con fuerte actividad económica, es decir, en el caso de las grandes ciudades encontraremos hoteles CityExpress cerca de una zona donde hay alta densidad de locales comerciales, oficinas corporativas o centros de negocios. En el caso de ciudades mas pequeñas o con actividades económicas específicas encontraremos hoteles cerca de los centros económicos de cada una de las ciudades, este hecho permite que la cadena agrupe a sus hoteles en distintos \textbf{corredores} dependiendo de la actividad de las zonas económicas donde se encuentran. A continuación se presentan los distintos corredores:
\begin{itemize}[noitemsep]
\item Energético
\item Exportacion-Agricultura
\item Franquicia
\item Internacional
\item Manufactura
\item Maquila
\item Mineria
\item Servicios
\end{itemize}
\paragraph {Hoteles} ~ \\
Las propiedades de Hoteles CityExpress siguen un estándar desde su construcción hasta en su operación diaria. En cuanto al estándar de construcción las propiedades generalmente cuentan con 6 plantas, 120 habitaciones, un lobby para la recepción de huéspedes y áreas comunes; por ejemplo, área designada para fumar, desayunador, salas de juntas, salones de eventos y alberca (en algunas propiedades). 
En cuanto a las habitaciones el tamaño puede variar por marca, sin embargo ofrecen los mismos servicios independientemente de ella: 
\begin{itemize}[noitemsep]
\item Internet Gratuito
\item Área de Trabajo
\item Lavandería
\item Aire Acondicionado
\item Pantalla de televisión
\item Desayuno de cortesía
\end{itemize}
\paragraph {Crecimiento} ~ \\
Hoteles CityExpress fue fundada en 2002 con su primer hotel construido en Saltillo. A partir de ese entonces se ejecutó un ambicioso plan de crecimiento en el cuál se impuso la meta de abrir un nuevo hotel cada 6.8 semanas. Esto llevo a que la cadena de hoteles contara con más de 140 propiedades en un lapso de 16 años.
Hoy en día Hoteles CityExpress cuenta con propiedades en 34 de los 36 estados de la República Mexicana y 5 mas en Latinoamérica: 1 en Costa Rica, 1 en Chile, 3 en Colombia. El plan de crecimiento sigue siendo ambicioso y la cadena espera contar con 180 propiedades para el 2020.
\begin{figure}[!]
  \includegraphics[width=\linewidth]{Imagenes/Ubicaciones.png}
  \caption{Plan de crecimiento}
  \label{fig:crecimiento}
\end{figure}
\section{Descripción del Problema}
\subsection{Gestión de las propiedades}
Hoteles CityExpress cuenta con un modelo de gestión comercial de sus propiedades ejecutado desde sus oficinas centrales ubicadas en la Ciudad de México. Este modelo de gestión se enfoca en optimizar la venta de los cuartos de las distintas propiedades, buscando siempre maximizar el ingreso obtenido por estas ventas.
Para poder entender mejor el modelo de gestión comercial debemos estudiar antes los canales distribución que utiliza para la venta de sus productos así como sus distintos segmentos de mercado. Posteriormente presentaremos las principales variables utilizadas para calificar el desempeño de las propiedades así como las acciones que puede tomar cada uno de los gerentes de las propiedades para poder cambiar el desempeño del hotel.
\paragraph{Canales de Venta} ~\\
CityExpress cuenta con un modelo de venta estandarizado para todas sus propiedades. Este modelo de venta contempla distintos canales de distribución que ayudan al grupo a poder incrementar la oferta de su producto llegando a distintos segmentos de mercado.
Es importante mencionar que cada uno de los canales de venta tienen un costo asociado, es decir, del ingreso que se perciba por cada cuarto vendido se debe tomar en cuenta el costo de cada canal para poder calcular la utilidad bruta de la venta, por eso es. importante conocer cómo opera cada uno de ellos.
Dentro de CityExpress existen dos tipos de canales de venta: \textbf{Canales de venta tradicionales} y \textbf{Canales de venta electrónicos}. Los canales de venta tradicionales, son aquellos en los cuales se requiere la intervención de un agente de ventas, los electrónicos permiten que el cliente final realice su reservación sin requerir la intervención del agente:
\paragraph{\textbf{Canales de venta tradicionales}}
\begin{itemize}[noitemsep]
\item Centro de Contacto (Call Center)
\item Hotel
\end{itemize}
\paragraph{\textbf{Canales de venta electrónicos}}
\begin{itemize}[noitemsep]
\item App (IOS y Android)
\item Portal Cliente Frecuente (City Premios)
\item Motor de reservaciones corporativas (CityAccess)
\item Motor de reservaciones (www.cityexpress.com.mx)
\item Agencias de viajes en línea (OTAs)
\end{itemize}
\paragraph{Segmentos de Mercado} ~\\
Los segmentos de mercado son un punto medular para poder entender el modelo de gestión en CityExpress ya que estos permiten al área comercial poder establecer una estrategia de venta en cada uno de los canales fijando precios en las distintas tarifas para poder maximizar la ocupación del hotel y el ingreso por cuartos vendidos. 
Típicamente un hotel cuenta con un conjunto de tarifas las cuales son ofrecidas a diferentes segmentos de mercado en diferentes canales. Por ejemplo, un huésped que viaja por placer y reserva por la página web de CityExpress muy probablemente recibirá una tarifa distinta al huésped que viaja por negocios y reservó por el centro de contacto.
A continuación se presentan los distintos segmentos de mercado manejados por CityExpress:
\paragraph{\textbf{Negocios}}
\begin{itemize}[noitemsep]
\item Directos
\item Convenios
\item Viajero Frecuente
\item Corporativo
\item Consorcios
\item Promociones
\item Otros
\end{itemize}
\paragraph{\textbf{Placer}}
\begin{itemize}[noitemsep]
\item Directos
\item Fin de Semana
\item Otros
\item Promociones
\end{itemize}
\paragraph{\textbf{Mayoreo}}
\begin{itemize}[noitemsep]
\item Agencias Minoristas
\item OTAs
\item Lineas Aéreas / Tripulaciones
\item Agencias Mayoristas
\item Otros
\end{itemize}
\paragraph{\textbf{Grupos}}
\begin{itemize}[noitemsep]
\item Grupos, Ferias, Congresos y Convenciones
\item Sociales
\item Juntas
\item Deportes
\end{itemize}
\paragraph{\textbf{Otros}}
\begin{itemize}[noitemsep]
\item Uso Casa
\item Cortesías
\item Intercambio
\item Empleados
\item Industria Turística
\item Otros
\end{itemize}
\paragraph{Tarifas} ~\\
Como se mencionó anteriormente, un hotel tiene un catálogo de 36 tarifas que puede ofrecer a los huéspedes. Cada tarifa va dirigida a un segmento de mercado y un canal en específico. Hay tarifas que pueden cambiar de precio hasta 3 veces al día y hay otras que al ser tarifas convenidas con otras empresas, permanecen estáticas la mayor parte del año.
Es responsabilidad de cada uno de los hoteles el revisar los distintos reportes expuestos en la organización en donde pueden encontrar: sus niveles de ocupación, ocupación de la competencia, tarifas promedio propias, tarifas promedio de la competencia, penetración de ocupación: $\frac{\% ocupacion\ propia}{ \% ocupacion\ de\ la\ competencia}$ y penetración de tarifa: $\frac{tarifa\ promedio\ propia}{tarifa\ promedio\ de\ la\ competencia}$ para decidir si deben hacer un incremento o decremento en los precios ofertados.
\paragraph{Variables estudiadas} ~\\
Dentro de CityExpress las decisiones de cambios de precios en las tarifas se toma analizando distintas variables. La mayoría de estas variables se alimentan de información propia del grupo hotelero aunque hay algunas que se obtienen de información de la competencia. A continuación se detallará cada una de las variables utilizadas durante la toma de estas decisiones:
\begin{itemize}[noitemsep]
\item \%Ocupacion
\item Tarifa Promedio
\item Tarifa Efectiva
\item Penetración de Ocupación
\item Penetración de Tarifa
\item Eventos por plaza
\item \%Ocupación de la competencia
\item Tarifa Promedio de la competencia
\item Tarifa Efectiva de la competencia
\end{itemize}
Derivado de las conclusiones del análisis de estas variables, los hoteles y el equipo de la oficina central pueden tomar alguna de las siguientes decisiones para alcanzar el objetivo deseado:
\begin{itemize}[noitemsep]
\item Subir precio de tarifa
\item Bajar precio de tarifa
\item Abrir un canal de venta
\item Cerrar un canal de venta
\item Promover la venta de un segmento específico mediante una promoción
\item Inhibir la venta de un segmento en específico cerrando disponibilidad de alguna tarifa
\end{itemize}
\subsection{Situación Actual}
Como se mencionó en el apartado anterior, hoy en día CityExpress gestiona su estrategia comercial desde las oficinas centrales delegando tareas clave a cada uno de los gerentes de las distintas propiedades, esto aunado al ambicioso plan de crecimiento de la cadena ha hecho que este modelo de gestión comercial se vuelva un proceso complicado de administrar y ejecutar de manera efectiva ya que se tienen las siguientes dependencias en el proceso:
\begin{itemize}[noitemsep]
\item Publicación de reportes diarios
\item Análisis de información publicada
\item Presentación de plan de acción de acuerdo al modelo de gestión
\item Aprobación del plan de acción por parte de la oficina central
\item Ejecución del plan de acción en los sistemas de control
\item Validación de resultados del plan de acción
\end{itemize}
\subsection{Propuesta de mejora al proceso}
Este proyecto tiene como objetivo mejorar el proceso de gestión de hoteles en CityExpress mediante la construcción de un sitio en donde se integre toda la información que hoy en día se expone en distintos reportes dentro de la empresa y además cuente con un modelo que permita pronosticar el $\%\ de\ ocupacion$ de cada una de las propiedades y a su vez haga una recomendación del precio para la tarifa que se ofrece al público en general que ayude a maximizar el ingreso por venta de cuartos dentro de la propiedad.
Con esta herramienta se espera que el modelo de gestión comercial se automatice y la ejecución del plan de acción se realice de manera más ágil.
\section{Metodología Propuesta}
\subsection{Plan de implementación}
A continuación se presentan los pasos que se siguieron para la implementación de este nuevo sistema de gestión:
\begin{description}
\item [$\bullet$ Entendimiento del negocio:]  Antes de construir una herramienta / producto de datos se dedicó un tiempo a conocer los procesos operativos de la cadena hotelera.
\item [$\bullet$ Entendimiento del sistema de gestión comercial:] Para que el producto final agregue verdadero valor a la empresa se debió comprender el tramo de control de cada puesto operativo destinado a hacer uso de esta herramienta, es decir, se identificaron las acciones que cada usuario puede ejecutar en los distintos sistemas para alcanzar sus objetivos comerciales.
\item [$\bullet$ Identificación de posibles fuentes de datos:] Una vez comprendidos los procesos operativos y de toma de decisiones, se identificaron los sistemas que proveen la información que ayuda al personal de CityExpress durante la toma de decisiones.
\item [$\bullet$ Análisis exploratorio de datos:] Una vez identificadas las fuentes de datos, se ejecutó un análisis exploratorio de datos con el fin de poder conocer los datos con que se trabajaron para posteriormente fijar un alcance para el producto final.
\item [$\bullet$ Modelo de predicción de ocupación y sugerencia de precios:] Una vez perfilados los datos y con un EDA concluido se realizó un esfuerzo para construir un modelo que fuera capaz de pronosticar el $\%\ de\ ocupacion$ y que sugiriera el $precio\ publico$ óptimo de cada una de las propiedades.
\item [$\bullet$ Construcción de prototipo de producto de datos:] Para finalizar este proyecto, se definió la arquitectura final del producto de datos y se construyó un prototipo totalmente funcional que apoya la toma de decisiones de los participantes del proceso de gestión comercial.
\end{description}
\subsection{Fuentes de datos}
Una vez hecho el análisis de negocio y conociendo la operación de CityExpress, detectamos que las fuentes principales para la construcción del producto de datos son las siguientes:
 \begin{itemize}
\item \textbf{Central de Reservaciones}: Módulo encargado de realizar las reservaciones de cuartos en las distintas propiedades. De este sistema obtuvimos el comportamiento histórico de cada una de las propiedades, es decir, cuantas habitaciones fueron reservadas, en qué momento y con qué tarifa.
\item \textbf{Property Management System (PMS)}: Módulo encargado de gestionar las propiedades. Aquí se pueden consultar las habitaciones ocupadas, disponibles y fuera de servicio, así como las llegadas y salidas del día. De este sistema obtuvimos las reservaciones en libros (bookings) o llegadas pendientes, esta información es crucial para poder conocer en la demanda real de cada una de las propiedades en el tiempo.
\item \textbf{Market Share}: Sistema encargado de recopilar la información de la competencia. Las variables recopiladas son Tarifa Promedio, Habitaciones Disponibles, Habitaciones ocupadas, entre otras. 
\item \textbf{Tarifas de la competencia}: Consulta de las tarifas disponibles en las agencias de viajes en línea para la competencia.
\end{itemize}
\subsection{Análisis Exploratorio de Datos}
A continuación se mostrará a detalle análisis exploratorio realizado al dataset inicial. Este data set comprendía información de 5 hoteles y el objetivo de este era brindar un apoyo a la comprensión de los datos para poder establecer una metodología de trabajo al momento de crear un modelo de predicción de demanda para cada una de las propiedades. Para fines de este trabajo detallaremos el "EDA" utilizando datos de una sola propiedad: "CEXXX".
\paragraph{Descripción del DataSet} ~\\
Durante la construcción del modelo se hizo uso de tres datasets principalmente. El primero de ellos llamado "histórico\_ocupación" fue obtenido del sistema de gestión de propiedades \textbf{(PMS)} y contiene la información del desempeño histórico de las propiedades. A continuación se presenta un resumen del data set en cuestión.

<<summary, echo=FALSE>>=
summary(historico_ocupacion)
@
\paragraph{} ~\\
A continuación se presenta el diccionario de datos para el data set presentado:
\begin{itemize}[noitemsep]
\item rsrv\_code: Código de confirmación de reserva
\item date\_create: Fecha de creación de la reserva
\item date\_in:Fecha de entrada al hotel
\item date\_out: Fecha de salida del hotel
\item nights: Número de noches en el hotel
\item prop\_code: Código de Hotel
\item mkt\_sgm: Segmento de Mercado
\item Dia\_Sem: Dia de la semana para la fecha de entrada al hotel
\item rate\_code: Código de tarifa
\item bucket: Nivel de tarifa
\item Ingresos: Ingresos obtenidos por la reservación
\item rsrv\_src: Canal de la reservación
\item rsrv\_type: Tipo de reservación
\item room\_type: Tipo de habitación
\item PAX: Personas amparadas por la reservación
\end{itemize}
Revisando el resumen de este data set es importante resaltar que los datos fueron trabajados previamente para presentarse de manera desagregada, es decir, si una reserva ampara una estancia de 5 noches tendremos un registro por cada noche de la estancia, por ejemplo:


<<registros, echo=FALSE>>=
reservas<-historico_ocupacion %>% filter(rsrv_code == 6265739) %>% select(rsrv_code,date_create,date_in,date_out,nights,room_type)
kable(reservas, "latex") %>% 
kable_styling(latex_options = "striped")
@
\paragraph{} ~\\
Como podemos observar el numero de reservación es el mismo en los 6 registros, lo mismo ocurre con la fecha de creación, las noches, y el tipo de habitación, sin embargo, la fecha de entrada y la fecha de salida va cambiando en cada registro. En algunos casos es más fácil trabajar con los registros desagregados, sin embargo hay casos en dónde necesitaremos agrupar la información.

\paragraph{Ocupación} ~\\
De las primeras preguntas que se vienen a la mente al momento de analizar la información de esta propiedad es ¿Qué nivel de ocupación tiene este hotel a lo largo del tiempo? Para contestar esta pregunta, se generáron las siguientes gráficas:
\paragraph{} ~\\
<<HabitacionesOcupadas, echo=FALSE>>=
tl_habocup <- historico_ocupacion %>% group_by(date_in) %>% summarise(nights=sum(nights))
ggplot(tl_habocup, aes(date_in, nights)) + geom_line() +
 xlab("") + ylab("Cuartos Ocupados")+ggtitle("Habitaciones Ocupadas")
@
\paragraph{} ~\\
<<Ocupacion, echo=FALSE>>=
tl_ocup <- historico_ocupacion %>% group_by(date_in) %>% summarise(ocupacion=sum(nights)/159)
ggplot(tl_ocup, aes(date_in, ocupacion)) + geom_line() +
 xlab("") + ylab("% Ocupacion")+ggtitle("% Ocupacion") + geom_smooth()
@
\paragraph{} ~\\
Como podemos observar esta propiedad tiene niveles de ocupación alrededor del 75\% llegando en repetidas ocasiones al 100\% de ocupación. Las caídas en los níveles de ocupación se deben a los fines de semana. A continuación presentamos una gráfica que nos ayudará a sustentar esta conclusión.
\paragraph{} ~\\
<<Ocupacion Dia Semana, echo=FALSE>>=
ocup_dia_sem <- historico_ocupacion %>% group_by(date_in) %>% summarise(nights=sum(nights),
                                                                        dia_sem = min(Dia_Sem),
                                                                        count_sem = 1) %>% 
                                                              group_by(dia_sem) %>% summarise(nights=sum(nights),
                                                                                              semanas = sum(count_sem)) %>% 
                                                              mutate(ocup=nights/(semanas*159))

ggplot(ocup_dia_sem, aes(dia_sem,ocup)) + geom_bar(stat="identity") +
 xlab("Dia de la semana") + ylab("% Ocupacion")+ggtitle("% Ocupacion por dia de la semana") +
  scale_x_discrete(limits=c("lun","mar","mie","jue","vie","sab","dom"))

@
\paragraph{Pickup} ~\\
Al realizar este tipo de análisis resulta interesante estudiar el tiempo de antelación con el cual el cliente reserva un cuarto, a esto se le llama curva de pickup. Para poder graficar esta curva necesitaremos agrupar los datos por numero de reservación obteniendo la mínima fecha de entrada y la máxima fecha de salida para cada una de ellas. Una vez trabajados los datos podremos calcular la antelación obteniendo la diferencia entre la fecha de entrada y la fecha de creación en días.
\paragraph{} ~\\
<<pickup, echo=FALSE>>=
historico_grp_rsrv <- historico_ocupacion %>% group_by(rsrv_code) %>% summarise(nights=sum(nights),
                                                                      date_create = min(date_create),
                                                                      date_in = min(date_in),
                                                                      date_out = max(date_out),
                                                                      count = 1)
historico_grp_rsrv$antelacion<-as.integer(difftime(historico_grp_rsrv$date_in,historico_grp_rsrv$date_create, units="days"))
pickup_rsrv <- historico_grp_rsrv %>% group_by(antelacion) %>% summarise(reservas=sum(count))
ggplot(pickup_rsrv, aes(antelacion, reservas)) + geom_line() + xlim(-1,100) + ggtitle("Pickup 100 dias")

@
\paragraph{} ~\\
<<pickupzoom, echo=FALSE>>=
ggplot(pickup_rsrv, aes(antelacion, reservas)) + geom_line() + xlim(-1,25) + ggtitle("Pickup 25 dias")
@
\paragraph{Pickup por Canal de Venta} ~\\
Como podemos observar en la gráfica "Pickup 25 días" el mayor número de reservaciones en esta propiedad ocurre 5 días antes de que el huésped llegue al hotel. Con esto podemos concluír que los clientes que visitan esta propiedad planean su estancia con a lo más 5 días de antelación. 
Resulta interesante ampliar este análisis para cada uno de los canales de reservación disponibles.
\paragraph{} ~\\
<<pickupsrc, echo=FALSE>>=
historico_grp_rsrv_src <- historico_ocupacion %>% group_by(rsrv_code,rsrv_src) %>% summarise(nights=sum(nights),
                                                                      date_create = min(date_create),
                                                                      date_in = min(date_in),
                                                                      date_out = max(date_out),
                                                                      count = 1)%>% left_join(canales, by=c("rsrv_src"="Id_Origen"))
historico_grp_rsrv_src$antelacion<-as.integer(difftime(historico_grp_rsrv_src$date_in,historico_grp_rsrv_src$date_create, units="days"))
pickup_src <- historico_grp_rsrv_src %>% group_by(Descripcion,antelacion) %>% summarise(reservas=sum(count)) 
ggplot(pickup_src, aes(antelacion, reservas)) + geom_line() + xlim(-1,25) + facet_wrap(~Descripcion) + ggtitle("Pickup por Canal de Reserva")
@
\paragraph{} ~\\
Podemos notar que para este hotel en particular el pickup es similar (alrededor de 5 días de antelación) en los canales que producen ventas de cuartos, sin embargo resulta interesante observar que no todos los canales tienen una producción significativa en esta propiedad ya que el grueso de las ventas se concentra en los siguientes canales:
\begin{itemize}[noitemsep]
\item Contact Center
\item Hotel
\item Ota's
\item Internet (Website)
\item GDS's
\end{itemize}
\paragraph{Canales de Venta} ~\\
<<reservacionesxcanal, echo=FALSE, fig.width=20, fig.height=15>>=
produccion_src <- historico_grp_rsrv_src %>% group_by(Descripcion) %>% summarise(reservas = sum(count),
                                                                                 cuartos = sum(nights)) %>% arrange(-reservas)
ggplot(produccion_src, aes(reorder(Descripcion,-reservas),reservas)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 60, hjust = 1)) +xlab("canal") + ggtitle("Reservas por Canal")
@
\paragraph{} ~\\
Por último estudiaremos cómo se comporta cada uno de los canales a lo largo del día, esto para poder encontrar un patrón en el uso de cada uno de los canales.
\paragraph{} ~\\
<<CorrelacionHoraCanal, echo=FALSE, fig.width=20, fig.height=15>>=
corr_hour<-historico_ocupacion %>% left_join(canales, by=c("rsrv_src"="Id_Origen")) %>% select(date_create,Descripcion,nights) %>% mutate(hour=format(date_create,"%H")) %>% group_by(hour,Descripcion) %>% summarise(count=as.numeric(sum(nights)))
corr_hour$hour <- as.numeric(corr_hour$hour)
corr_hour<- corr_hour %>% spread(Descripcion, count)
corr_hour[is.na(corr_hour)]<-0
corr_hour <- as.matrix(corr_hour)
#cor(corr_hour)
corr_hour_hist<-historico_ocupacion %>% left_join(canales, by=c("rsrv_src"="Id_Origen")) %>% select(date_create,Descripcion,nights) %>% mutate(hour=format(date_create,"%H")) %>% select(hour,Descripcion)
ggplot(corr_hour_hist, aes(hour)) +geom_bar()+theme(axis.text.x = element_text(angle = 60, hjust = 1))+ facet_wrap(~Descripcion)
@
\paragraph{} ~\\
Con la gráfica anterior podemos corroborar los canales de venta más activos para este hotel y podemos concluír también que las horario en el que esta propiedad genera más reservaciones es de 9:00 am a 9:00 pm, con excepción del canal "walk in" el cuál tiene una distribución uniforme en las reservas generadas a lo largo del día.
\paragraph{Segmentos de Mercado} ~\\
Como se mencionó anteriormente, City Express implementa una segmentación de mercado en cada una de las reservaciones que genera, esto nos permitirá analizar el perfil del huésped que visita cada una de las propiedades. A continuación presentaremos un análisis partícular para una de las propiedades.
A continuación se presentan los segmentos de mercado y las reservaciones que produjeron durante un periodo de tiempo:
\paragraph{} ~\\
<<SegmentosMercado, echo=FALSE, fig.width=20, fig.height=15>>=
historico_mkt <- historico_ocupacion %>%left_join(segmentos, by=c("mkt_sgm"="ID_SUBSEGM")) %>%  group_by(rsrv_code) %>% summarise(nights=sum(nights),
                                                                      date_create = min(date_create),
                                                                      date_in = min(date_in),
                                                                      date_out = max(date_out),
                                                                      mkt_sgm = min(mkt_sgm),
                                                                      count = 1)
historico_mkt_rsrv <- historico_mkt %>% left_join(segmentos, by=c("mkt_sgm"="ID_SUBSEGM")) %>% group_by(Descripcion) %>% summarise(reservas=sum(count)) %>% arrange(-reservas)

ggplot(historico_mkt_rsrv, aes(reorder(Descripcion,-reservas),reservas)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 60, hjust = 1)) +xlab("Segmento") + ggtitle("Reservas por Segmento")
@
\paragraph{} ~\\
Derivado de este analisis podemos observar lo siguiente:
Los segmentos que mas reservan son:
\begin{itemize}[noitemsep]
\item OTA's (Agencias de Viaje en línea)
\item Negocios-Convenios (Empresas con tarifa convenio)
\item Negocios-Directos (Viajeros de negocios sin tarifas convenio)
\item Negocios-Promociones (Viajeros de negocios con cupones promocionales)
\end{itemize}
Podemos decir que el perfil del huésped que visita esta propiedad es el viajero de negocios que visita oficinas corporativas cercanas a la ubicación del hotel durante la semana laboral (Lunes - Viernes).
\paragraph{Producción de Cuartos por Segmentos} ~\\
Contrastaremos la gráfica anterior contra la producción de cuartos vendidos por cada uno de los segmentos para poder tener una ídea de cuantos cuartos vende cada segmento en cada una de las reservaciones generadas.
\paragraph{} ~\\
<<SegmentosMercadoCNO, echo=FALSE, fig.width=20, fig.height=15>>=
historico_mkt <- historico_ocupacion %>%left_join(segmentos, by=c("mkt_sgm"="ID_SUBSEGM")) %>%  group_by(rsrv_code) %>% summarise(nights=sum(nights),
                                                                      date_create = min(date_create),
                                                                      date_in = min(date_in),
                                                                      date_out = max(date_out),
                                                                      mkt_sgm = min(mkt_sgm),
                                                                      count = 1)
historico_mkt_cno <- historico_mkt %>% left_join(segmentos, by=c("mkt_sgm"="ID_SUBSEGM")) %>% group_by(Descripcion) %>% summarise(cuartos=sum(nights)) %>% arrange(-cuartos)

ggplot(historico_mkt_cno, aes(reorder(Descripcion,-cuartos),cuartos)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 60, hjust = 1)) +xlab("Segmento") + ggtitle("Produccion de Cuartos por Segmento")
@
\paragraph{} ~\\
Podemos notar que el segmento de Negocios-Convenios produce más cuartos en un menor número de reservas, al contrario de las OTA's que producen mas reservaciones con menos venta de cuartos.
\paragraph{Estancia Promedio por Segmento} ~\\
A continuación graficaremos la estancia promedio de cada uno de los segmentos, esta medida nos deja ver cuantas noches pasa un huésped dentro de una propiedad. La fórmula para obtener esta variable es: $ Estancia\ Promedio=\frac{Cuartos Vendidos}{Reservas Generadas}$.
\paragraph{} ~\\
<<EstanciaPromedio, echo=FALSE, fig.width=20, fig.height=15>>=
historico_mkt <- historico_ocupacion %>%left_join(segmentos, by=c("mkt_sgm"="ID_SUBSEGM")) %>%  group_by(rsrv_code) %>% summarise(nights=sum(nights),
                                                                      date_create = min(date_create),
                                                                      date_in = min(date_in),
                                                                      date_out = max(date_out),
                                                                      mkt_sgm = min(mkt_sgm),
                                                                      count = 1)
historico_mkt_eprom <- historico_mkt %>% left_join(segmentos, by=c("mkt_sgm"="ID_SUBSEGM")) %>% group_by(Descripcion) %>% summarise(eprom=sum(nights)/sum(count)) %>% arrange(-eprom)

ggplot(historico_mkt_eprom, aes(reorder(Descripcion,-eprom),eprom)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 60, hjust = 1)) +xlab("Segmento") + ggtitle("Estancia Promedio por Segmento")
@
\paragraph{} ~\\
Como podemos ver, la estancia promedio más alta la tiene el segmento de Negocios-Directos, con una estancia promedio de aproximadamente tres noches, contrastada con el segmento de Placer-Otros con una estancia promedio de aproximadamente noche. Esta información nos ayuda a complementar el perfil del huésped para esta propiedad ya que nos refuerza la idea de que el viajero de negocios utiliza las propiedades durante la semana laboral, y un viajero de placer puede que se hospede un día en fin de semana.
\paragraph{} ~\\
El segundo data set con el que contamos, trae información diaria sobre los níveles de ocupación, tarifa promedio, tarifa efectiva, habitaciones disponibles, penetración de ocupación y penetración de tarifa para los hoteles sujetos al estudio. Para efectos de este trabajo tomaremos información sobre el hotel con el que hemos venido trabajando.
<<SummaryIndicadores, echo=FALSE>>=
summary(indicadores)
@
\paragraph{} ~\\
Lo primero que podemos observar es que contamos con datos para el hotel CEXXX a partir del "2017-01-01" y hasta el "2017-12-31". Esta propiedad tiene 159 habitaciones disponibles y maneja niveles de ocupación alrededor del 81.7\%; su tarifa promedio se encuentra alrededor de \$1486.60 y con PO y PT muy cercana a 1 indicando que es un hotel fuerte dentro del set competitivo de la plaza.
A continuación presentamos los datos de manera gráfica.
\paragraph{Ocupación en el tiempo} ~\\
<<IndicadoresOcupacion, echo=FALSE>>=
ggplot(indicadores, aes(fecha, occ)) + geom_line() +
 xlab("") + ylab("% Ocupacion")+ggtitle("% Ocupacion") + geom_smooth()
@
\paragraph{Tarifa Promedio en el tiempo} ~\\
<<IndicadoresTarifaPromedio, echo=FALSE>>=
ggplot(indicadores, aes(fecha, tp)) + geom_line() +
 xlab("") + ylab("TP" )+ggtitle("Tarifa Promedio") + geom_smooth()
@
\paragraph{Penetración de Ocupación en el tiempo} ~\\
<<IndicadoresPO, echo=FALSE>>=
ggplot(indicadores, aes(fecha, po)) + geom_line() +
 xlab("") + ylab("PO" )+ggtitle("Penetracion Ocupacion") + geom_smooth()
@
\paragraph{Penetración de Tarifa en el tiempo} ~\\
<<IndicadoresPT, echo=FALSE>>=
ggplot(indicadores, aes(fecha, pt)) + geom_line() +
 xlab("") + ylab("PT" )+ggtitle("Penetracion Tarifa") + geom_smooth()
@
\paragraph{Penetración de Ocupación vs Penetración de Tarifa} ~\\
Al estudiar los datos notamos que hay una correlación negativa entre la penetración de ocupación y la penetración de la tarifa, recordemos que la primera indica cuanta ocupación tiene una de las propiedades de CityExpress con respecto a la ocupación de su plaza, y la segunda indica cuánto del ingreso disponible se está quedando dentro de la propiedad de interés. En otras palabras podemos pensar en una relación similar a la del precio de un bien vs la demanda de un bien. A mayor precio menor demanda y a menor precio mayor demanda, lo cual indica que la relación entre ambas variables debe ser negativa.
\paragraph{} ~\\
<<POvsPT, echo=FALSE>>=
ggplot(indicadores, aes(po, pt)) + geom_point(alpha=0.3) + geom_smooth(method='lm',formula=y~x,) +
 xlab("PO") + ylab("PT" )+ggtitle("PO vs PT") 
@
\paragraph{Precio de la competencia} ~\\
El último data set con el que contamos contiene información sobre los precios de la competencia definida para CEXXX publicados en las agencias de viajes en línea.
\paragraph{} ~\\
<<PrecioCompetencia, echo=FALSE>>=
summary(competencia)
@
\paragraph{Precios en el tiempo} ~\\
<<PreciosGraf, echo=FALSE>>=
ggplot(competencia, aes(fecha,precio,colour=nombre)) + geom_line()
@
\paragraph{} ~\\
Nos llaman la atención algunos datos que salen del patrón del comportamiento, para estudiarlos con mas detalle veamos la siguiente gráfica:
\paragraph{} ~\\
<<PreciosBoxPlot, echo=FALSE,fig.width=20, fig.height=15>>=
ggplot(competencia, aes(nombre,precio)) + geom_boxplot(outlier.colour="red", outlier.shape=1,
                outlier.size=2)+ theme(axis.text.x = element_text(angle = 60, hjust = 1))
@
\paragraph{} ~\\
Podemos observar que este data set contiene datos atípicos, por ejemplo el hotel "Courtyard by Marriot Mexico City Revolución" tiene tarifas arriba de los \$10,000 MXN, lo cual es poco probable ya que es un hotel que compite directamente con CityExpress y su mercado es el mismo (Viajero de Negocios). Estos casos se deberán tomar en cuenta al momento de construír el modelo de pronóstico y pricing dinámico para evitar resultados erróneos. 
\subsection{Propuesta de Modelo Predictivo}
\paragraph{Descripción del modelo} ~\\
Para el desarrollo del modelo utilizaremos los data sets que contienen la información de las reservaciones modelados como curvas de "pick up". Estas curvas nos describen la velocidad en que un hotel vende su inventario para un día en específico. Lo que el modelo hará es ajustar una curva que resuma el comportamiento del hotel para un día similar al que se está estudiando, de esa manera podremos predecir cuantos cuartos venderá el hotel y con cuantos días de antelación.Para lograr esto se construirá un modelo de regresión Poisson fundamentado en la distribución de la llegada de las reservaciones como un proceso discreto que depende del tiempo y para darle un enfoque de uso predictivo al modelo, se utiliza un modelo de regresión lineal con predictores que dependen del tiempo para dar un valor estimado por día y por hotel de las curvas de "pick Up".
\paragraph{Modelo de regresión Poisson} ~\\
Derivado de la curva de “Pick-up” que representa el movimiento de las reservaciones en función a los días de anticipación antes de una fecha dada, se observó que la forma de la curva presenta una forma logarítmica, es por ello que se optó por considerar este modelo para la primera parte de la ecuación.
$$\log(E(Y|X))=\beta_0 + \beta_1{X}$$
Se contruyeron series por día y hotel en función del número de días de antelación para la reservación.
~\\
La selección del modelo de regresión Poisson se fundamenta en la distribución de la llegada de las reservaciones como un proceso discreto que depende del tiempo. El conteo de las reservaciones es inversamente proporcional a la cercanía de la fecha de entrada al hotel y por tanto la probabilidad de ocurrencia de llenado del hotel incrementa conforme se acerca la fecha para la que se hace la reservación.
\paragraph{Modelo de regresión lineal} ~\\
Considerando que las principales variables que describen la predictividad de la demanda son temporales, se propone un modelo que explique los parámetros de las curvas de "pick up" mediante un modelo lineal. Se generan series temporales para hacer predictivo el modelo de pronóstico de demanda y proyectamos en función de la historia en el mismo día calendario del año anterior, el día de la semana para compensar los efectos diferenciados por hotel, así como los eventos que afectan la demanda en un calendario anticipado por hotel, y finalmente el comportamiento de las tarifas que ofrece la competencia.
$$\log(E(Y|X))=\beta_0 + \beta_1{X}$$
\subsection{Desarrollo del modelo}
A continuación se presenta el código del modelo desarrollado en R.
<<Modelo, echo=TRUE>>=
library(plyr)
HIS_CEXXX<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
#HIS_CEXXX$antelacion <-as.integer(difftime(HIS_CEXXX$date_in,HIS_CEXXX$date_create, units="days"))

#Juntamos todas las tablas en un solo dataset
#datos <- rbind(HIS_CEINS, HIS_CEMID, HIS_CEMTA, HIS_CEMZT, HIS_CEPAZ, HIS_CEPDC, RES_CEINS, RES_CEMID, RES_CEMTA, RES_CEMZT, RES_CEPAZ, RES_CEPDC)
datos <-(HIS_CEXXX)
#Modelo de regresión Poisson para obtener parámetros de modelo predictivo
modelo.1<-function(base,h){
  hotel<-subset(base,prop_code==h)
  dia<-sort(unique(hotel$date_in))
  ndia<-length(dia)
  beta0<-rep(0,ndia)
  beta1<-rep(0,ndia)
  variacion<-rep(0,ndia)
  for(i in 1:ndia){
    eleccion <- ddply(subset(hotel,as.character(date_in)==as.character(dia[i]),select = c('antelacion','nights')),
                      .(antelacion),summarise, nights = sum(nights))
    eleccion <- eleccion[with(eleccion,order(-antelacion)), ]
    eleccion$nights <- cumsum(eleccion$nights)
    eleccion <- eleccion[eleccion$antelacion<=60,]
    mod <- glm(nights~antelacion, family = "poisson", data = eleccion)
    coeficientes <- coef(mod)
    beta0[i] <- coeficientes[1]
    beta1[i]<- coeficientes[2]
    variacion[i] <- sqrt(mod$deviance)
  }
  yresp <- data.frame(hotel=rep(h,ndia),dia,beta0,beta1,variacion)
  return(yresp)
}

# Prepara datos 2017 de entrada del modelo
res <- ddply(datos,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
res <- subset(res,format(res$date_in, "%Y")=="2017")
yresp.1 <- modelo.1(res,"CEINS")
#yresp <- rbind(yresp.1, yresp.2, yresp.3, yresp.4, yresp.5, yresp.6)
yresp<-yresp.1


### Preparación de datos para modelo predictivo (2018)
series2018 <- subset(yresp,format(yresp$dia, "%Y")=="2017")
series2018$dia <- as.Date(series2018$dia)+365
names(series2018) <- c("hotel","dia","AAbeta0","AAbeta1","AAvariacion")

### Series a la fecha de corte en la extracción

#Reservas
RES_CEXXX<-read_csv("datos/EST_PAS_UNIC_CEINS.csv")
#
###BORRAR
RES_CEXXX$date_create<-as.Date(RES_CEXXX$date_create)+365
RES_CEXXX$date_in<-as.Date(RES_CEXXX$date_in)+365
RES_CEXXX$date_out<-as.Date(RES_CEXXX$date_out)+365
####
res<-RES_CEXXX
res <- ddply(res,.(prop_code,date_create,date_in), summarise, nights=sum(nights))
res$prop_code<-toupper(res$prop_code)
res$antelacion <- as.numeric(res$date_in - res$date_create)
series2018al11ago <- subset(series2018,as.numeric(dia)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res,as.numeric(date_in)<as.numeric(as.Date("2018-08-11")))
res2018al11ago <- subset(res2018al11ago,format(res2018al11ago$date_in, "%Y")=="2018")

### Aplicación del modelo a la fecha de corte por extracción
param.1 <- modelo.1(res2018al11ago,"CEINS")

#param2018 <- rbind(param.1, param.2, param.3, param.4, param.5, param.6)
param2018 <- param.1
series2018al11ago <- join(series2018al11ago,param2018)

### Generación de predictores de modelo predictivo
series2018al11ago$diasem <- as.factor(weekdays(series2018al11ago$dia))
series2018al11ago$mes <- as.factor(format(series2018al11ago$dia, "%b"))
#TDC <- read.csv("TDC.csv")
#names(TDC) <- c("dia","tdc")
#series2018al11ago <- join(series2018al11ago,TDC)
series2018al11ago$eventos <- rep(0,nrow(series2018al11ago))
series2018al11ago$eventos <- as.factor(ifelse(as.numeric(series2018al11ago$dia)<=as.numeric(as.Date("2018-08-11")) & 
                                                as.numeric(series2018al11ago$dia)>=as.numeric(as.Date("2018-03-27")),1,0))
PO_PT <- indicadores %>% select(Hotel,fecha,po,pt)
##Borrar
PO_PT$fecha<-as.Date(PO_PT$fecha)+365
##
names(PO_PT) <- c("hotel","dia","PO","PT")
series2018al11ago <- join(series2018al11ago,PO_PT)

### Generación de modelos predictivos por hotel
#CEINS
datos2018al11agoCEINS <- subset(series2018al11ago,hotel=="CEINS")
mod.CEINS.beta0 <- lm(beta0~AAbeta0+diasem+eventos+PO+PT,data=datos2018al11agoCEINS)
datos2018al11agoCEINS$pred.beta0 <-predict(mod.CEINS.beta0,type='response')
datos2018al11agoCEINS$AAbeta1[is.na(datos2018al11agoCEINS$AAbeta1)]<-0
mod.CEINS.beta1 <- lm(beta1~AAbeta1+diasem+eventos+PO+PT,data=datos2018al11agoCEINS)
datos2018al11agoCEINS$pred.beta1<-predict(mod.CEINS.beta1,type='response')

### Aplica los modelos a la serie completa 2015
#series2018 <- join(series2018,TDC)
series2018$AAbeta1[is.na(series2018$AAbeta1)]<-0
series2018 <- join(series2018,PO_PT)
series2018$diasem <- as.factor(weekdays(series2018$dia))
series2018$mes <- as.factor(format(series2018$dia, "%b"))

series2018$eventos1 <- ifelse(as.numeric(series2018$dia)<=as.numeric(as.Date("2018-04-04")) & 
                                as.numeric(series2018$dia)>=as.numeric(as.Date("2018-03-27")),1,0)

#series2018$eventos <- series2018$eventos1+series2018$eventos2+series2018$eventos3+series2018$eventos4+series2018$eventos5+series2018$eventos6+series2018$eventos7+series2018$eventos8+series2018$eventos9+series2018$eventos10+series2018$eventos11+series2018$eventos12+series2018$eventos13

series2018$eventos <- series2018$eventos1
series2018$eventos <- as.factor(series2018$eventos)
series2018$pred.beta0 <- ifelse(series2018$hotel=="CEINS",predict(mod.CEINS.beta0,newdata=series2018,type="response"),0)
series2018$pred.beta1 <- ifelse(series2018$hotel=="CEINS",predict(mod.CEINS.beta1,newdata=series2018,type="response"),0)

@

\section{Resultados}
\section{Referencias}
\end{document}